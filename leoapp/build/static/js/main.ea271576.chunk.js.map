{"version":3,"sources":["serviceWorker.js","components/estiloshtml.js","components/controlesautos.js","components/antcarousel.js","components/cardcomponent.js","components/filtromenu.js","components/timeline.js","containers/listartrips1.js","components/menu.js","estilos.js","components/formularionewtrip.js","main.js","index.js"],"names":["Boolean","window","location","hostname","match","TituloPrincipal","styled","h1","_templateObject","Flexcontainer","button","_templateObject2","props","primary","input","_templateObject3","inputColor","div","_templateObject4","Flexcolumn","_templateObject5","Notfound","react_default","a","createElement","CarouselPrincipal","isMobile","carousel","effect","src","alt","dist","ContenedorCards","card","title","style","fontSize","color","marginBottom","fontWeight","type","width","cover","extra","href","marginTop","withStyles","theme","margin","spacing","unit","display","classes","Button_default","className","accept","id","multiple","htmlFor","component","PendingTimeLine","timeline","Item","dot","icon","React","Component","LoadMoreList","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","initLoading","data","error","fechatexto","dateobj","Date","year","getFullYear","toLocaleString","month","toString","concat","info","console","log","componentStack","_this2","fetch","then","res","json","result","setState","catch","message","_this3","_this$state","filtromenu","list","itemLayout","loading","dataSource","renderItem","item","Meta","avatar","urlFlag","pais","target","rel","description","convertirFecha","annoDeLaVisita","components_timeline","MenuAPP","toggle","bind","assertThisInitialized","isOpen","reactstrap_es","light","expand","onClick","navbar","exact","to","activeclassname","tag","RRNavLink","actvieclassname","Box","estilos_templateObject","TitleBCCR","estilos_templateObject2","Wrapper","section","estilos_templateObject3","Button","estilos_templateObject4","TomatoButton","estilos_templateObject5","Link","_ref","children","StyledLink","_templateObject6","Thing","_templateObject7","Formularionewtrip","Main","BrowserRouter","menu_MenuAPP","Switch","Route","path","ReactDOM","render","main","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ea271576.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nimport styled from 'styled-components';\n\n// Create a Title component that'll render an <h1> tag with some styles\nconst TituloPrincipal = styled.h1`\n  font-size: 1.5rem;\n  text-align: left;\n  color: #FF8F00;\n  padding: 0.5px;\n  margin: 2px 2px 25px 2px;\n`;\n\nconst Button = styled.button`\n  /* Adapt the colors based on primary prop */\n  background: ${props => props.primary ? \"palevioletred\" : \"white\"};\n  color: ${props => props.primary ? \"white\" : \"palevioletred\"};\n\n  font-size: 1em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border: 2px solid palevioletred;\n  border-radius: 3px;\n`;\n\nconst Input = styled.input`\n  padding: 0.5em;\n  margin: 0.5em;\n  color: ${props => props.inputColor || \"palevioletred\"};\n  background: white;\n  border: none;\n  border-radius: 3px;\n  width : 250px;\n`;\n\nconst Flexcontainer = styled.div` \n  display: flex; \n  background : #F0F0DF;\n`\n\nconst Flexcolumn = styled.div`\n  width: 50%;\n  margin: 10px;\n  padding: 5px;\n  line-height: 75px;\n  font-size: 30px;\n  background :#FFFF;\n`\n\n\n\n\nexport {\n  TituloPrincipal\n  ,Button,Input\n  ,Flexcontainer  \n  ,Flexcolumn\n};","import React from \"react\";\n\nimport {TituloPrincipal} from '../components/estiloshtml';\n\n\nconst Notfound = () => <h1>Not found</h1>\nconst PantallaCargando = (props) =>{\n    return (<h1>....Cargando</h1>);\n    \n    }\n    \nconst TituloBienvenida = (props) => {\n    return (<TituloPrincipal> {props.label} </TituloPrincipal>);\n}\n    \nconst ListadorDeModelos = (props) => {\n \n        return( \n            <ul>\n            {props.autos.Results.map(item => (\n                \n                <li key = {item.Model_ID}>\n                        {item.Model_Name} : {item.Make_Name} \n                </li>\n\n            ))}\n            </ul>\n        );\n    \n}\n\nconst ListadorDeMarcas = (props) => {\n \n        return( \n            <ul>\n            {props.autos.Results.map((item,i) => (\n                \n                <li key= {item.Make_ID} >\n                        {item.Make_Name} \n                </li>\n\n            ))}\n            </ul>\n        );\n    \n}\n\n\nexport  {PantallaCargando,TituloBienvenida,ListadorDeModelos,Notfound,ListadorDeMarcas};","import { Carousel } from 'antd';\r\nimport React from 'react';\r\nimport {\r\n    BrowserView,\r\n    MobileView,    \r\n    isMobile\r\n  } from \"react-device-detect\";\r\n\r\n\r\nconst CarouselPrincipal = () =>{\r\nif(isMobile)\r\n{\r\n   return (\r\n    <Carousel effect=\"fade\">\r\n    <div><h1> This is rendered only on mobile</h1></div>\r\n    <div><h3>2</h3></div>\r\n    <div><h3>3</h3></div>\r\n    <div><h3>4</h3></div>\r\n</Carousel>  \r\n   )\r\n}else{\r\n    return (\r\n        \r\n        <div>\r\n            <Carousel effect=\"fade\">\r\n            <div> <img src=\"https://yourtrips.azurewebsites.net/img/imgslide1.jpg\" alt=\"Imagen\" /></div>\r\n            <div><h3>2</h3></div>\r\n            <div><h3>3</h3></div>\r\n            <div><h3>4</h3></div>\r\n        </Carousel>  \r\n        <BrowserView>\r\n        <h1> This is rendered only in browser </h1>\r\n        </BrowserView>\r\n        <MobileView>\r\n                <h1> This is rendered only on mobile </h1>\r\n         </MobileView>  \r\n    </div>\r\n    );\r\n        \r\n}\r\n   \r\n            \r\n      \r\n    }\r\n\r\nexport {CarouselPrincipal}","import { Card } from 'antd';\r\nimport React from 'react';\r\n\r\n\r\n\r\nconst ContenedorCards = () => {\r\n    return(\r\n        <Card title=\"Un diario de tus viajes\">\r\n    <p\r\n      style={{\r\n        fontSize: 14,\r\n        color: 'rgba(0, 0, 0, 0.85)',\r\n        marginBottom: 16,\r\n        fontWeight: 500,\r\n      }}\r\n    >\r\n      Vive tus viajes una y otra vez\r\n    </p>\r\n    <Card\r\n      type=\"inner\"\r\n      style={{ width: 300 }}\r\n      title=\"Registra tus viajes\"\r\n      cover={<img alt=\"example\" src=\"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\" />}\r\n      extra={<a href=\"https://ant.design/components/list/\">More</a>}\r\n    >\r\n      Registra tus viajes, las fechas y los lugares que visitados.\r\n    </Card>\r\n    <Card\r\n      style={{ marginTop: 16, width: 450 }}\r\n      type=\"inner\"\r\n      cover={<img alt=\"example\" src=\"https://wallpapers.wallhaven.cc/wallpapers/full/wallhaven-545676.jpg\" />}\r\n      title=\"Enumera tus proximos viajes\"\r\n      extra={<a href=\"https://ant.design/components/list/\">More</a>}\r\n    >\r\n      Has una lista de tus viajes en el futuro, sin orden ni fecha solo posibles lugares.\r\n    </Card>\r\n  </Card>\r\n    );\r\n}\r\n\r\nexport {ContenedorCards};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n});\r\n\r\nfunction TextButtons(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <div>\r\n      <Button className={classes.button}>TIMELINE</Button>\r\n      <Button color=\"primary\" className={classes.button}>\r\n        Ordernar\r\n      </Button>    \r\n      <input\r\n        accept=\"image/*\"\r\n        className={classes.input}\r\n        id=\"flat-button-file\"\r\n        multiple\r\n        type=\"file\"\r\n      />\r\n      <label htmlFor=\"flat-button-file\">\r\n        <Button component=\"span\" className={classes.button}>\r\n          Upload\r\n        </Button>\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nTextButtons.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TextButtons);","import { Timeline, Icon } from 'antd';\r\nimport React from 'react';\r\nclass PendingTimeLine extends React.Component {\r\n \r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Timeline >\r\n          <Timeline.Item>Tu primer viaje Venezuela 2015-09-01</Timeline.Item>\r\n          <Timeline.Item dot={<Icon type=\"clock-circle-o\" style={{ fontSize: '16px' }} />} color=\"red\">\r\n          Tu primer viaje a Cuba 2015-09-01          \r\n          </Timeline.Item>\r\n          <Timeline.Item>Tu viaje Nardia 2015-09-01</Timeline.Item>\r\n          <Timeline.Item>Tu viaje Nardia 2015-09-01</Timeline.Item>\r\n          <Timeline.Item>Tu viaje Nardia 2015-09-01</Timeline.Item>\r\n          <Timeline.Item>Tu viaje Nardia 2015-09-01</Timeline.Item>\r\n          <Timeline.Item>Tu viaje Nardia 2015-09-01</Timeline.Item>\r\n          <Timeline.Item>Tu viaje Nardia 2015-09-01</Timeline.Item>          \r\n          <Timeline.Item>Tu último viaje a SF USA 2015-09-01</Timeline.Item>\r\n        </Timeline>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PendingTimeLine;","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { List, Avatar,Spin } from 'antd';\r\nimport TextButtons from '../components/filtromenu';\r\nimport { Flexcontainer,Flexcolumn,TituloPrincipal } from '../components/estiloshtml';\r\nimport  PendingTimeLine  from '../components/timeline';\r\nclass LoadMoreList extends React.Component {\r\n  constructor(props){\r\n        super(props);\r\n        this.state = { \r\n          initLoading: true,                                          \r\n          data : [],\r\n          error : \"\"\r\n        };      \r\n  }\r\n\r\n  convertirFecha(fechatexto){\r\n     if(typeof fechatexto == \"string\"){\r\n      var dateobj= new Date(fechatexto);     \r\n      var year = dateobj.getFullYear();  \r\n      var  locale = \"en-us\";\r\n      var month = dateobj.toLocaleString(locale, { month: \"long\" });\r\n      return month.toString().concat(\" \").concat(year.toString());\r\n     }\r\n    \r\n    return fechatexto;\r\n   }\r\n\r\n\r\n   componentDidCatch(error, info) {\r\n    // Example \"componentStack\":\r\n    //   in ComponentThatThrows (created by App)\r\n    //   in ErrorBoundary (created by App)\r\n    //   in div (created by App)\r\n    //   in App\r\n    console.log(\"componentDidCatch\");\r\n    console.log(info.componentStack);\r\n    console.log(error);\r\n  }\r\n      componentWillUnmount(){       \r\n     \r\n      }\r\n    \r\n      componentWillUpdate(){\r\n      \r\n      }\r\n\r\n      componentDidUpdate(){\r\n           \r\n      }\r\n\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://tripsapi20181211043716.azurewebsites.net/api/trips\")          //https://tripsapi20181211043716.azurewebsites.net/api/trips\r\n          .then(res => {      \r\n             return res.json()\r\n            }\r\n          )\r\n          .then(              \r\n            (result) => {     \r\n               this.setState({                \r\n                  initLoading : false,\r\n                  data :result\r\n              });\r\n            }            \r\n          ).catch(error => this.setState({ error : error.message }));\r\n      \r\n      } \r\n    render(){\r\n\r\n        const {initLoading,error,data} = this.state;\r\n        \r\n        if(error){     \r\n            return <div>Lo sentimos algo salio mal:  {error.message}  </div>;\r\n       \r\n        }else {      \r\n         \r\n            return (\r\n              <div>\r\n                  <TextButtons></TextButtons>\r\n                  \r\n                    <Flexcontainer>\r\n                    <Flexcolumn>\r\n                    <TituloPrincipal>Tus viajes registrados</TituloPrincipal>\r\n                        <List\r\n                          itemLayout=\"horizontal\"\r\n                          loading={initLoading}\r\n                          dataSource={data}\r\n                          renderItem={item => (\r\n                            <List.Item>\r\n                              <List.Item.Meta                    \r\n                                avatar={<Avatar src={item.urlFlag} />}\r\n                                title={<a href={\"https://www.google.com/search?q=\" + item.pais }   target=\"_blank\" rel=\"noopener noreferrer\">{item.pais}</a>}\r\n                                description={\"Tu viaje fue realizado en \" +  \r\n                                this.convertirFecha(item.annoDeLaVisita)                               \r\n                              }                                \r\n                              />\r\n                            </List.Item>                            \r\n                          )}\r\n                        />                  \r\n                  </Flexcolumn>\r\n                  <Flexcolumn>\r\n                  <TituloPrincipal>Histograma</TituloPrincipal>\r\n                  <PendingTimeLine></PendingTimeLine>\r\n                  </Flexcolumn>                    \r\n                  </Flexcontainer>   \r\n                 \r\n              </div>\r\n                );\r\n                }\r\n                \r\n     }\r\n    \r\n   \r\n     \r\n}\r\n\r\n\r\nexport {LoadMoreList};","import React from \"react\";\r\nimport { NavLink as RRNavLink  } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { \r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Collapse\r\n} from 'reactstrap';\r\n\r\n class MenuAPP extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.toggle = this.toggle.bind(this);\r\n        this.state = {\r\n          isOpen: false\r\n        };\r\n     \r\n      }\r\n      toggle() {\r\n        this.setState({\r\n          isOpen: !this.state.isOpen\r\n        });\r\n      }\r\n      render()\r\n      {\r\n        return(\r\n            <div>\r\n            <Navbar color=\"light\" light expand=\"md\">\r\n            <NavbarBrand href=\"/\">Mis países por el mundo</NavbarBrand>\r\n            <NavbarToggler onClick={this.toggle} />\r\n            <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n            <NavItem>\r\n                <NavLink exact to=\"/\" className=\"nav-link\" activeclassname=\"active\" tag={RRNavLink}>Home</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n                <NavLink actvieclassname=\"active\" to=\"/home2\" tag={RRNavLink}>Home2 </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n                <NavLink actvieclassname=\"active\" to=\"/marcas\" tag={RRNavLink}>Por visitar </NavLink>\r\n            </NavItem>\r\n\r\n            <NavItem>              \r\n                <NavLink actvieclassname=\"active\" to=\"/misviajes\" tag={RRNavLink}> Mis viajes</NavLink>             \r\n            </NavItem>              \r\n            </Nav>\r\n            </Collapse>\r\n\r\n            </Navbar>\r\n            </div>\r\n        );\r\n        }\r\n }\r\n\r\nexport {MenuAPP};","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\n\nconst Box = styled.div`\n  width: 100px;\n  height: 100px;\n  border: 10px solid chocolate;\n  border-radius: 10px;\n`;\n\n\n// Create a Title component that'll render an <h1> tag with some styles\nconst TitleBCCR = styled.h1`\n  font-size: 1.5em;\n  text-align: center;\n  color: palevioletred;\n`;\n\n// Create a Wrapper component that'll render a <section> tag with some styles\nconst Wrapper = styled.section`\n  padding: 4em;\n  background: #F0F0DF;\n`;\n\n\nconst Button = styled.button`\n  /* Adapt the colors based on primary prop */\n  background: ${props => props.primary ? \"palevioletred\" : \"white\"};\n  color: ${props => props.primary ? \"white\" : \"palevioletred\"};\n\n  font-size: 1em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border: 2px solid palevioletred;\n  border-radius: 3px;\n`;\n\n// The Button from the last section without the interpolations\n// A new component based on Button, but with some override styles\nconst TomatoButton = styled(Button)`\n  color: tomato;\n  border-color: tomato;\n`;\n\n// This could be react-router-dom's Link for example\nconst Link = ({ className, children }) => (\n    <a className={className}>\n      {children}\n    </a>\n  );\n  \n  const StyledLink = styled(Link)`\n    color: palevioletred;\n    font-weight: bold;\n  `;\n  \n  const Thing = styled.button`\n  color: blue;\n\n  ::before {\n    content: '🚀';\n  }\n\n  :hover {\n    color: red;\n  }\n`\n\n\n\nclass PruebaEstilos extends Component {\n  render() {\n    return (\n        <div>\n              <Box />\n            <Wrapper>\n                <TitleBCCR>\n                Hello World!\n                </TitleBCCR>\n            </Wrapper>\n            <Button>Normal</Button>\n            <Button primary>Primary</Button>\n            <TomatoButton>Tomato Button</TomatoButton>\n            <div>\n    <Link>Unstyled, boring Link</Link>\n    <br />\n    <StyledLink>Styled, exciting Link</StyledLink>\n   </div>\n   <Thing>Hello world!</Thing>\n  </div>\n    \n      \n    );\n  }\n}\n\n\n\n\nexport { PruebaEstilos,TomatoButton,Wrapper};","import React from 'react';\r\nimport {TomatoButton,Wrapper} from '../estilos';\r\nimport { TituloPrincipal } from './estiloshtml';\r\n\r\n\r\n const Formularionewtrip = (props) => {\r\n\r\n    return( \r\n        <Wrapper>\r\n            <TituloPrincipal>Paises por visitar</TituloPrincipal>\r\n            <TomatoButton>+ Nuevo lugar</TomatoButton>\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport {Formularionewtrip};","import React from 'react';\r\nimport './index.css';\r\n\r\nimport { Route, BrowserRouter ,Switch  } from 'react-router-dom';\r\nimport {Notfound} from './components/controlesautos';\r\nimport {CarouselPrincipal} from './components/antcarousel';\r\nimport {ContenedorCards} from './components/cardcomponent';\r\nimport {LoadMoreList} from './containers/listartrips1';\r\nimport {MenuAPP} from './components/menu';\r\nimport {Formularionewtrip} from './components/formularionewtrip';\r\n\r\nconst Main = (props) =>{\r\n    \r\n    \r\n      return (\r\n        <BrowserRouter>           \r\n        <div>\r\n          <MenuAPP/>\r\n          <Switch>               \r\n            <Route exact path=\"/\" component={ContenedorCards} /> \r\n            <Route exact path=\"/home2\" component={CarouselPrincipal} />  \r\n            <Route exact path=\"/marcas\" component={Formularionewtrip} />     \r\n            <Route exact path=\"/misviajes\" component={LoadMoreList} />  \r\n            <Route component={Notfound}/>\r\n          </Switch>\r\n        </div>\r\n  </BrowserRouter>\r\n      )\r\n}\r\n    \r\n  \r\n\r\nexport default Main;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Main from './main';\n \nReactDOM.render(<Main/> , document.getElementById('root'));\n\nserviceWorker.unregister();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n"],"sourceRoot":""}