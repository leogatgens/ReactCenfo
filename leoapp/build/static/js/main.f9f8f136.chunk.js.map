{"version":3,"sources":["serviceWorker.js","components/estiloshtml.js","components/controlesautos.js","containers/listarmodelos.js","containers/listarmarcas.js","estilos.js","components/formularioseleccion.js","components/cardcomponent.js","components/filtromenu.js","components/timeline.js","containers/listartrips1.js","components/menu.js","components/formularionewtrip.js","main.js","index.js"],"names":["Boolean","window","location","hostname","match","TituloPrincipal","styled","h1","_templateObject","Input","button","_templateObject2","props","primary","input","_templateObject3","inputColor","Flexcontainer","div","_templateObject4","Flexcolumn","_templateObject5","Notfound","react_default","a","createElement","PantallaCargando","TituloBienvenida","label","ListadorDeModelos","autos","Results","map","item","key","Model_ID","Model_Name","Make_Name","ListadorDeMarcas","i","Make_ID","ListaModelosDeAutos","React","Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","console","log","state","cargado","autosPorModeloyAnno","error","prevProps","filtro","listarautomovilespormarca","_this2","rutaAPI","trim","fetch","then","res","json","result","setState","_this$state","message","Count","texto","SearchCriteria","controlesautos_TituloBienvenida","controlesautos_ListadorDeModelos","controlesautos_PantallaCargando","Box","estilos_templateObject","TitleBCCR","estilos_templateObject2","Wrapper","section","estilos_templateObject3","Button","estilos_templateObject4","TomatoButton","estilos_templateObject5","Link","_ref","className","children","StyledLink","_templateObject6","Thing","_templateObject7","TextBoxEspejo","handleChange","event","target","value","handleClick","onTemperatureChange","Fragment","type","placeholder","onChange","onClick","ContenedorCards","card","title","style","fontSize","color","marginBottom","fontWeight","width","cover","alt","src","extra","href","marginTop","withStyles","theme","margin","spacing","unit","display","classes","Button_default","accept","id","multiple","htmlFor","component","PendingTimeLine","timeline","Item","dot","icon","LoadMoreList","initLoading","loading","misViajes","fechatexto","dateobj","Date","year","getFullYear","toLocaleString","month","toString","concat","catch","_this3","filtromenu","list","itemLayout","dataSource","renderItem","Meta","avatar","urlFlag","pais","rel","description","convertirFecha","annoDeLaVisita","components_timeline","MenuAPP","toggle","bind","assertThisInitialized","isOpen","reactstrap_es","light","expand","navbar","exact","to","activeclassname","tag","RRNavLink","actvieclassname","Formularionewtrip","Main","BrowserRouter","menu_MenuAPP","Switch","Route","path","ReactDOM","render","main","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f9f8f136.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nimport styled from 'styled-components';\n\n// Create a Title component that'll render an <h1> tag with some styles\nconst TituloPrincipal = styled.h1`\n  font-size: 1.5rem;\n  text-align: left;\n  color: #FF8F00;\n  padding: 0.5px;\n  margin: 2px 2px 25px 2px;\n`;\n\nconst Button = styled.button`\n  /* Adapt the colors based on primary prop */\n  background: ${props => props.primary ? \"palevioletred\" : \"white\"};\n  color: ${props => props.primary ? \"white\" : \"palevioletred\"};\n\n  font-size: 1em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border: 2px solid palevioletred;\n  border-radius: 3px;\n`;\n\nconst Input = styled.input`\n  padding: 0.5em;\n  margin: 0.5em;\n  color: ${props => props.inputColor || \"palevioletred\"};\n  background: white;\n  border: none;\n  border-radius: 3px;\n  width : 250px;\n`;\n\nconst Flexcontainer = styled.div` \n  display: flex; \n  background : #F0F0DF;\n`\n\nconst Flexcolumn = styled.div`\n  width: 50%;\n  margin: 10px;\n  padding: 5px;\n  line-height: 75px;\n  font-size: 30px;\n  background :#FFFF;\n`\n\n\n\n\nexport {\n  TituloPrincipal\n  ,Button,Input\n  ,Flexcontainer  \n  ,Flexcolumn\n};","import React from \"react\";\n\nimport {TituloPrincipal} from '../components/estiloshtml';\n\n\nconst Notfound = () => <h1>Not found</h1>\nconst PantallaCargando = (props) =>{\n    return (<h1>....Cargando</h1>);\n    \n    }\n    \nconst TituloBienvenida = (props) => {\n    return (<TituloPrincipal> {props.label} </TituloPrincipal>);\n}\n    \nconst ListadorDeModelos = (props) => {\n \n        return( \n            <ul>\n            {props.autos.Results.map(item => (\n                \n                <li key = {item.Model_ID}>\n                        {item.Model_Name} : {item.Make_Name} \n                </li>\n\n            ))}\n            </ul>\n        );\n    \n}\n\nconst ListadorDeMarcas = (props) => {\n \n        return( \n            <ul>\n            {props.autos.Results.map((item,i) => (\n                \n                <li key= {item.Make_ID} >\n                        {item.Make_Name} \n                </li>\n\n            ))}\n            </ul>\n        );\n    \n}\n\n\nexport  {PantallaCargando,TituloBienvenida,ListadorDeModelos,Notfound,ListadorDeMarcas};","import React from 'react';\nimport {PantallaCargando,TituloBienvenida,ListadorDeModelos} from '../components/controlesautos';\n\n\n\nclass ListaModelosDeAutos extends React.Component {   \n    constructor(props){\n        super(props);\n        console.log(props);\n        this.state = { \n            cargado : true,                                   \n            autosPorModeloyAnno : {},\n            error : \"\"\n            \n        };\n    \n      }\n      componentWillUnmount(){\n        console.log(\"componentWillUnmount\");   \n      }\n    \n      componentWillUpdate(){\n        console.log(\"componentDidUpdate\");       \n      }\n\n      componentDidUpdate(prevProps) {\n        console.log(prevProps);\n        // Typical usage (don't forget to compare props):\n        if (this.props.filtro !== prevProps.filtro) {\n          this.listarautomovilespormarca(this.props.filtro);\n        }\n      }\n  \n\n      listarautomovilespormarca(filtro) {\n        let rutaAPI = 'https://vpic.nhtsa.dot.gov/api/vehicles/getmodelsformakeyear/make/' + filtro.trim() + '/modelyear/2015?format=json';\n        fetch(rutaAPI)\n          .then(res => res.json())\n          .then((result) => {\n            this.setState({\n              cargado: true,\n              autosPorModeloyAnno: result\n            });\n          }, error => {\n            this.state({\n              cargado: true,\n              error\n            });\n          });\n      }\n\n    componentDidMount() {\n      console.log(\"componentDidMount\");\n      this.listarautomovilespormarca(this.props.filtro);\n        \n      }\n\n    render(){\n      \n        const {error,autosPorModeloyAnno,cargado} = this.state;\n   \n        if(error){     \n            return <div>Error : {error.message}</div>;\n        }else if(!cargado){\n            return <PantallaCargando />;\n        }else {    \n            console.log(\"render\");  \n            console.log(autosPorModeloyAnno.Count );  \n            \n                  const texto = \"Modelos por marca: \" + autosPorModeloyAnno.SearchCriteria;\n                    return( \n                        <div>\n                        <TituloBienvenida label = {texto}></TituloBienvenida>                     \n                        {autosPorModeloyAnno.Count > 0 ? <ListadorDeModelos autos = {autosPorModeloyAnno} /> : <PantallaCargando /> }  \n                        </div>\n                    );\n                }                \n     }\n   \n}\nexport {ListaModelosDeAutos};","import React from 'react';\nimport {PantallaCargando,TituloBienvenida,ListadorDeMarcas} from '../components/controlesautos';\n\n\nclass ListaMarcasDeAutos extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = { \n            cargado : true,                                   \n            autosPorModeloyAnno : {},\n            error : \"\"\n        };\n\n      \n      }   \n      componentWillUnmount(){      \n      }\n    \n      componentWillUpdate(){                    \n      }\n\n      componentDidUpdate(){        \n      }\n\n\n    componentDidMount() {\n        fetch(\"https://vpic.nhtsa.dot.gov/api/vehicles/getallmakes?format=json\")\n          .then(res => res.json())\n          .then(\n            (result) => {          \n               this.setState({  \n                  cargado : true,\n                  autosPorModeloyAnno :result\n              });\n            },\n        \n            error => {\n                this.state({\n                    cargado : true,\n                    error\n                })\n            }\n          )\n      \n      } \n    render(){\n\n        const {error,autosPorModeloyAnno,cargado} = this.state;\n       \n        if(error){     \n            return <div>Error : {error.message}</div>;\n        }else if(!cargado){\n            return <div>Cargando....</div>;\n        }else {    \n            return( \n                    <div>\n                        <TituloBienvenida  label=\"Frabricantes de automoviles\" ></TituloBienvenida> \n                    \n                        {autosPorModeloyAnno.Count > 0 ? <ListadorDeMarcas autos = {autosPorModeloyAnno} /> :<PantallaCargando /> }  \n                    </div>\n                    );\n                }                \n     }    \n}\n\n\nexport {ListaMarcasDeAutos};","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\n\nconst Box = styled.div`\n  width: 100px;\n  height: 100px;\n  border: 10px solid chocolate;\n  border-radius: 10px;\n`;\n\n\n// Create a Title component that'll render an <h1> tag with some styles\nconst TitleBCCR = styled.h1`\n  font-size: 1.5em;\n  text-align: center;\n  color: palevioletred;\n`;\n\n// Create a Wrapper component that'll render a <section> tag with some styles\nconst Wrapper = styled.section`\n  padding: 4em;\n  background: #F0F0DF;\n`;\n\n\nconst Button = styled.button`\n  /* Adapt the colors based on primary prop */\n  background: ${props => props.primary ? \"palevioletred\" : \"white\"};\n  color: ${props => props.primary ? \"white\" : \"palevioletred\"};\n\n  font-size: 1em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border: 2px solid palevioletred;\n  border-radius: 3px;\n`;\n\n// The Button from the last section without the interpolations\n// A new component based on Button, but with some override styles\nconst TomatoButton = styled(Button)`\n  color: tomato;\n  border-color: tomato;\n`;\n\n// This could be react-router-dom's Link for example\nconst Link = ({ className, children }) => (\n    <a className={className}>\n      {children}\n    </a>\n  );\n  \n  const StyledLink = styled(Link)`\n    color: palevioletred;\n    font-weight: bold;\n  `;\n  \n  const Thing = styled.button`\n  color: blue;\n\n  ::before {\n    content: '🚀';\n  }\n\n  :hover {\n    color: red;\n  }\n`\n\n\n\nclass PruebaEstilos extends Component {\n  render() {\n    return (\n        <div>\n              <Box />\n            <Wrapper>\n                <TitleBCCR>\n                Hello World!\n                </TitleBCCR>\n            </Wrapper>\n            <Button>Normal</Button>\n            <Button primary>Primary</Button>\n            <TomatoButton>Tomato Button</TomatoButton>\n            <div>\n    <Link>Unstyled, boring Link</Link>\n    <br />\n    <StyledLink>Styled, exciting Link</StyledLink>\n   </div>\n   <Thing>Hello world!</Thing>\n  </div>\n    \n      \n    );\n  }\n}\n\n\n\n\nexport { PruebaEstilos,TomatoButton,Wrapper};","import React from 'react';\n\nimport {ListaModelosDeAutos} from '../containers/listarmodelos';\nimport {Input} from '../components/estiloshtml';\nimport {TomatoButton,Wrapper} from '../estilos';\n\n\n\nclass TextBoxEspejo extends React.Component  {\n    constructor(props){\n        super(props); \n        this.state = {\n            filtro :\"\"\n        }        \n    }\n\n    handleChange =(event) => {\n    \n        this.setState({      \n                  filtro : event.target.value\n        });\n        \n    }\n\n    handleClick = (event) => {\n    \n        this.props.onTemperatureChange(this.state.filtro);\n    }\n    render(){\n                return (\n                    <>\n                    <label>\n                    Marca : \n                        <Input type=\"text\" placeholder=\"Escriba la marca de automovil\" value={this.state.filtro} onChange ={this.handleChange} ></Input>\n                    </label>\n                    <TomatoButton onClick={this.handleClick}>Consultar</TomatoButton>\n                    </>\n            );\n    }\n\n}\n\n\nclass FormularioBusquedaPorMarca extends React.Component {      \n    constructor(props){\n        super(props);\n        this.state = {\n            value : \"\",            \n            filtro : \"\",\n            listadeMarcas : {},\n            error : \"\",\n            cargado : true\n\n        };           \n}\n\n    handleChange = (event) =>{    \n        this.setState({\n            value : event\n        });   \n       \n    }\n \n    render(){\n       const valor= this.state.value;  \n        return (\n            <div >\n             <Wrapper>\n                <TextBoxEspejo valorTexto = {valor} onTemperatureChange={this.handleChange}  ></TextBoxEspejo>    \n            </Wrapper>                     \n               \n            {valor !== \"\" ? <ListaModelosDeAutos filtro = {valor} /> : <h1>digite un filtro</h1>} \n            </div>\n\n        );\n    }\n}\n\nexport {FormularioBusquedaPorMarca};\n","import { Card } from 'antd';\r\nimport React from 'react';\r\n\r\n\r\n\r\nconst ContenedorCards = () => {\r\n    return(\r\n        <Card title=\"Un diario de tus viajes\">\r\n    <p\r\n      style={{\r\n        fontSize: 14,\r\n        color: 'rgba(0, 0, 0, 0.85)',\r\n        marginBottom: 16,\r\n        fontWeight: 500,\r\n      }}\r\n    >\r\n      Vive tus viajes una y otra vez\r\n    </p>\r\n    <Card\r\n      type=\"inner\"\r\n      style={{ width: 300 }}\r\n      title=\"Registra tus viajes\"\r\n      cover={<img alt=\"example\" src=\"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\" />}\r\n      extra={<a href=\"#\">More</a>}\r\n    >\r\n      Registra tus viajes, las fechas y los lugares que visitados.\r\n    </Card>\r\n    <Card\r\n      style={{ marginTop: 16, width: 450 }}\r\n      type=\"inner\"\r\n      cover={<img alt=\"example\" src=\"https://wallpapers.wallhaven.cc/wallpapers/full/wallhaven-545676.jpg\" />}\r\n      title=\"Enumera tus proximos viajes\"\r\n      extra={<a href=\"#\">More</a>}\r\n    >\r\n      Has una lista de tus viajes en el futuro, sin orden ni fecha solo posibles lugares.\r\n    </Card>\r\n  </Card>\r\n    );\r\n}\r\n\r\nexport {ContenedorCards};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n});\r\n\r\nfunction TextButtons(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <div>\r\n      <Button className={classes.button}>TIMELINE</Button>\r\n      <Button color=\"primary\" className={classes.button}>\r\n        Ordernar\r\n      </Button>    \r\n      <input\r\n        accept=\"image/*\"\r\n        className={classes.input}\r\n        id=\"flat-button-file\"\r\n        multiple\r\n        type=\"file\"\r\n      />\r\n      <label htmlFor=\"flat-button-file\">\r\n        <Button component=\"span\" className={classes.button}>\r\n          Upload\r\n        </Button>\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nTextButtons.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TextButtons);","import { Timeline, Icon } from 'antd';\r\nimport React from 'react';\r\nclass PendingTimeLine extends React.Component {\r\n \r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Timeline >\r\n          <Timeline.Item>Tu primer viaje Venezuela 2015-09-01</Timeline.Item>\r\n          <Timeline.Item dot={<Icon type=\"clock-circle-o\" style={{ fontSize: '16px' }} />} color=\"red\">\r\n          Tu primer viaje a Cuba 2015-09-01          \r\n          </Timeline.Item>\r\n          <Timeline.Item>Tu viaje Nardia 2015-09-01</Timeline.Item>\r\n          <Timeline.Item>Tu viaje Nardia 2015-09-01</Timeline.Item>\r\n          <Timeline.Item>Tu viaje Nardia 2015-09-01</Timeline.Item>\r\n          <Timeline.Item>Tu viaje Nardia 2015-09-01</Timeline.Item>\r\n          <Timeline.Item>Tu viaje Nardia 2015-09-01</Timeline.Item>\r\n          <Timeline.Item>Tu viaje Nardia 2015-09-01</Timeline.Item>          \r\n          <Timeline.Item>Tu último viaje a SF USA 2015-09-01</Timeline.Item>\r\n        </Timeline>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PendingTimeLine;","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { List, Avatar,Spin } from 'antd';\nimport TextButtons from '../components/filtromenu';\nimport { Flexcontainer,Flexcolumn,TituloPrincipal } from '../components/estiloshtml';\nimport  PendingTimeLine  from '../components/timeline';\nclass LoadMoreList extends React.Component {\n  constructor(props){\n        super(props);\n        this.state = { \n          initLoading: true,\n          loading : false,                                   \n            misViajes : {},\n            error : \"\"\n        };      \n  }\n\n  convertirFecha(fechatexto){\n     if(typeof fechatexto == \"string\"){\n      var dateobj= new Date(fechatexto);     \n      var year = dateobj.getFullYear();  \n      var  locale = \"en-us\";\n      var month = dateobj.toLocaleString(locale, { month: \"long\" });\n      return month.toString().concat(\" \").concat(year.toString());\n     }\n    \n    return fechatexto;\n   }\n\n      componentWillUnmount(){       \n     \n      }\n    \n      componentWillUpdate(){\n      \n      }\n\n      componentDidUpdate(){\n           \n      }\n\n\n    componentDidMount() {\n        fetch(\"https://tripsapi20181211043716.azurewebsites.net/api/trips\")          //https://tripsapi20181211043716.azurewebsites.net/api/trips\n          .then(res => {      \n             return res.json()\n            }\n          )\n          .then(              \n            (result) => {     \n               this.setState({  \n                  loading : true,\n                  initLoading : false,\n                  misViajes :result\n              });\n            }            \n          ).catch(error => this.setState({ error, loading: false }));\n      \n      } \n    render(){\n\n        const {error,misViajes,loading,initLoading} = this.state;\n      \n        if(error){     \n            return <div>Lo sentimos algo salio mal:  {error.message}  </div>;\n       \n        }else {      \n         \n            return (\n              <div>\n                  <TextButtons></TextButtons>\n                  \n                    <Flexcontainer>\n                    <Flexcolumn>\n                    <TituloPrincipal>Tus viajes registrados</TituloPrincipal>\n                        <List\n                          itemLayout=\"horizontal\"\n                          loading={initLoading}\n                          dataSource={misViajes}\n                          renderItem={item => (\n                            <List.Item>\n                              <List.Item.Meta                    \n                                avatar={<Avatar src={item.urlFlag} />}\n                                title={<a href={\"https://www.google.com/search?q=\" + item.pais }   target=\"_blank\" rel=\"noopener noreferrer\">{item.pais}</a>}\n                                description={\"Tu viaje fue realizado en \" +  \n                                this.convertirFecha(item.annoDeLaVisita)                               \n                              }                                \n                              />\n                            </List.Item>                            \n                          )}\n                        />                  \n                  </Flexcolumn>\n                  <Flexcolumn>\n                  <TituloPrincipal>Histograma</TituloPrincipal>\n                  <PendingTimeLine></PendingTimeLine>\n                  </Flexcolumn>                    \n                  </Flexcontainer>   \n                 \n              </div>\n                );\n                }\n                \n     }\n    \n   \n     \n}\n\n\nexport {LoadMoreList};","import React from \"react\";\r\nimport { NavLink as RRNavLink  } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { \r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Collapse\r\n} from 'reactstrap';\r\n\r\n class MenuAPP extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.toggle = this.toggle.bind(this);\r\n        this.state = {\r\n          isOpen: false\r\n        };\r\n     \r\n      }\r\n      toggle() {\r\n        this.setState({\r\n          isOpen: !this.state.isOpen\r\n        });\r\n      }\r\n      render()\r\n      {\r\n        return(\r\n            <div>\r\n            <Navbar color=\"light\" light expand=\"md\">\r\n            <NavbarBrand href=\"/\">Mis países por el mundo</NavbarBrand>\r\n            <NavbarToggler onClick={this.toggle} />\r\n            <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n            <NavItem>\r\n                <NavLink exact to=\"/\" className=\"nav-link\" activeclassname=\"active\" tag={RRNavLink}>Home</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n                <NavLink actvieclassname=\"active\" to=\"/marcas\" tag={RRNavLink}>Por visitar </NavLink>\r\n            </NavItem>\r\n            <NavItem>              \r\n                <NavLink actvieclassname=\"active\" to=\"/misviajes\" tag={RRNavLink}> Mis viajes</NavLink>             \r\n            </NavItem>              \r\n            </Nav>\r\n            </Collapse>\r\n\r\n            </Navbar>\r\n            </div>\r\n        );\r\n        }\r\n }\r\n\r\nexport {MenuAPP};","import React from 'react';\r\nimport {TomatoButton,Wrapper} from '../estilos';\r\nimport { TituloPrincipal } from './estiloshtml';\r\n\r\n\r\n const Formularionewtrip = (props) => {\r\n\r\n    return( \r\n        <Wrapper>\r\n            <TituloPrincipal>Paises por visitar</TituloPrincipal>\r\n            <TomatoButton>+ Nuevo lugar</TomatoButton>\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport {Formularionewtrip};","import React from 'react';\r\nimport './index.css';\r\nimport {ListaMarcasDeAutos} from './containers/listarmarcas';\r\nimport {FormularioBusquedaPorMarca} from './components/formularioseleccion';\r\nimport { Route, BrowserRouter ,Switch  } from 'react-router-dom';\r\nimport {Notfound} from './components/controlesautos';\r\n\r\n//import Example from './components/carousel';\r\nimport {ContenedorCards} from './components/cardcomponent';\r\nimport {LoadMoreList} from './containers/listartrips1';\r\n\r\nimport {MenuAPP} from './components/menu';\r\nimport {Formularionewtrip} from './components/formularionewtrip';\r\n\r\nconst Main = (props) =>{\r\n    \r\n    \r\n      return (\r\n        <BrowserRouter>           \r\n        <div>\r\n          <MenuAPP/>\r\n          <Switch>               \r\n            <Route exact path=\"/\" component={ContenedorCards} /> \r\n            <Route exact path=\"/marcas\" component={Formularionewtrip} />     \r\n            <Route exact path=\"/misviajes\" component={LoadMoreList} />  \r\n            <Route component={Notfound}/>\r\n          </Switch>\r\n        </div>\r\n  </BrowserRouter>\r\n      )\r\n}\r\n    \r\n  \r\n\r\nexport default Main;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport ListasCondicionales from './main';\n \nReactDOM.render(<ListasCondicionales/> , document.getElementById('root'));\n\nserviceWorker.unregister();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n"],"sourceRoot":""}